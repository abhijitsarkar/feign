/*
 * Copyright (c) 2016, the original author or authors.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; version 3 of the License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * A copy of the GNU General Public License accompanies this software,
 * and is also available at http://www.gnu.org/licenses.
 */

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath(
                "io.spring.gradle:dependency-management-plugin:$depMgmtPluginVersion"
        )
    }
}

apply plugin: 'scala'

dependencies {
    testCompile(
            'org.springframework.boot:spring-boot-starter-web'
    )
    testCompile(
            project(':feign-core'),
            project(':feign-persistence')
    )
}

allprojects {
    apply plugin: 'scala'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'io.spring.dependency-management'

    repositories {
        mavenLocal()
        mavenCentral()
    }

    group = 'name.abhijitsarkar.feign'
    version = '1.0-SNAPSHOT'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    tasks.withType(ScalaCompile) {
        // Enable Scala warnings output
        scalaCompileOptions.additionalParameters = ['-feature']
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-starter-parent:$springBootVersion"
        }
    }

    dependencies {
        compileOnly(
                "org.scala-lang:scala-library:$scalaVersion",
                "org.slf4j:slf4j-api:$slf4jVersion",
                "ch.qos.logback:logback-core:$logbackVersion",
                "ch.qos.logback:logback-classic:$logbackVersion"
        )
        runtime('de.flapdoodle.embed:de.flapdoodle.embed.mongo'
        )
        testCompile(
                "org.scalatest:scalatest_2.12.0-M5:$scalatestVersion",
                "org.mockito:mockito-core:$mockitoVersion",
                'org.springframework.boot:spring-boot-starter-test',
                'com.jayway.jsonpath:json-path'
        )
        testRuntime("org.scalactic:scalactic_2.12.0-M5:$scalacticVersion")
    }
}
